// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id         String      @id @default(uuid()) @db.Uuid
  clerkId    String      @unique
  name       String?
  email      String?     @unique
  role       Role        @default(USER)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  educations Education[]
  // experiences Experience[]

  @@map("users")
}

model Education {
  id            String   @id @default(uuid()) @db.Uuid
  userId        String   @db.Uuid // âœ… FIXED: make it match User.id type
  instituteName String
  degree        String
  startYear     Int
  endYear       Int?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map("educations")
}

// model Experience {
//   id     String @id @default(uuid()) @db.Uuid
//   userId String @db.Uuid

//   User User @relation(fields: [userId], references: [id])
// }
